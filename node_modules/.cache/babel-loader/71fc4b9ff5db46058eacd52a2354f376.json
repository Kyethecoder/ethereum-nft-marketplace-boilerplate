{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kye Goullet\\\\Documents\\\\opensea Dapp\\\\ethereum-nft-marketplace-boilerplate\\\\src\\\\providers\\\\MoralisDappProvider\\\\MoralisDappProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useMoralis } from \"react-moralis\";\nimport MoralisDappContext from \"./context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MoralisDappProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const {\n    web3,\n    Moralis,\n    user\n  } = useMoralis();\n  const [walletAddress, setWalletAddress] = useState();\n  const [chainId, setChainId] = useState();\n  const [contractABI, setContractABI] = useState[({\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"nftContract\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"tokenId\",\n      \"type\": \"uint256\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"price\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"createMarketItem\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"nftContract\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"itemId\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"createMarketSale\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  }, {\n    \"anonymous\": false,\n    \"inputs\": [{\n      \"indexed\": true,\n      \"internalType\": \"uint256\",\n      \"name\": \"itemId\",\n      \"type\": \"uint256\"\n    }, {\n      \"indexed\": true,\n      \"internalType\": \"address\",\n      \"name\": \"nftContract\",\n      \"type\": \"address\"\n    }, {\n      \"indexed\": true,\n      \"internalType\": \"uint256\",\n      \"name\": \"tokenId\",\n      \"type\": \"uint256\"\n    }, {\n      \"indexed\": false,\n      \"internalType\": \"address\",\n      \"name\": \"seller\",\n      \"type\": \"address\"\n    }, {\n      \"indexed\": false,\n      \"internalType\": \"address\",\n      \"name\": \"owner\",\n      \"type\": \"address\"\n    }, {\n      \"indexed\": false,\n      \"internalType\": \"uint256\",\n      \"name\": \"price\",\n      \"type\": \"uint256\"\n    }, {\n      \"indexed\": false,\n      \"internalType\": \"bool\",\n      \"name\": \"sold\",\n      \"type\": \"bool\"\n    }],\n    \"name\": \"MarketItemCreated\",\n    \"type\": \"event\"\n  }, {\n    \"anonymous\": false,\n    \"inputs\": [{\n      \"indexed\": true,\n      \"internalType\": \"uint256\",\n      \"name\": \"itemId\",\n      \"type\": \"uint256\"\n    }, {\n      \"indexed\": false,\n      \"internalType\": \"address\",\n      \"name\": \"owner\",\n      \"type\": \"address\"\n    }],\n    \"name\": \"MarketItemSold\",\n    \"type\": \"event\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"fetchMarketItems\",\n    \"outputs\": [{\n      \"components\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"itemId\",\n        \"type\": \"uint256\"\n      }, {\n        \"internalType\": \"address\",\n        \"name\": \"nftContract\",\n        \"type\": \"address\"\n      }, {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }, {\n        \"internalType\": \"address payable\",\n        \"name\": \"seller\",\n        \"type\": \"address\"\n      }, {\n        \"internalType\": \"address payable\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }, {\n        \"internalType\": \"uint256\",\n        \"name\": \"price\",\n        \"type\": \"uint256\"\n      }, {\n        \"internalType\": \"bool\",\n        \"name\": \"sold\",\n        \"type\": \"bool\"\n      }],\n      \"internalType\": \"struct marketPlaceBoilerPlate.MarketItem[]\",\n      \"name\": \"\",\n      \"type\": \"tuple[]\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"owner\",\n    \"outputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"\",\n      \"type\": \"address\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  })];\n  const [marketAddress, setMarketAddress] = useState(0xd9145CCE52D386f254917e481eB44e9943F39138); //Smart Contract Address Here\n\n  useEffect(() => {\n    Moralis.onChainChanged(function (chain) {\n      setChainId(chain);\n    });\n    Moralis.onAccountsChanged(function (address) {\n      setWalletAddress(address[0]);\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    var _web3$givenProvider;\n\n    return setChainId((_web3$givenProvider = web3.givenProvider) === null || _web3$givenProvider === void 0 ? void 0 : _web3$givenProvider.chainId);\n  });\n  useEffect(() => {\n    var _web3$givenProvider2;\n\n    return setWalletAddress(((_web3$givenProvider2 = web3.givenProvider) === null || _web3$givenProvider2 === void 0 ? void 0 : _web3$givenProvider2.selectedAddress) || (user === null || user === void 0 ? void 0 : user.get(\"ethAddress\")));\n  }, [web3, user]);\n  return /*#__PURE__*/_jsxDEV(MoralisDappContext.Provider, {\n    value: {\n      walletAddress,\n      chainId,\n      marketAddress,\n      setMarketAddress,\n      contractABI,\n      setContractABI\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MoralisDappProvider, \"d0vDhh+ra/I5YKF3FZpows6TQuE=\", false, function () {\n  return [useMoralis];\n});\n\n_c = MoralisDappProvider;\n\nfunction useMoralisDapp() {\n  _s2();\n\n  const context = React.useContext(MoralisDappContext);\n\n  if (context === undefined) {\n    throw new Error(\"useMoralisDapp must be used within a MoralisDappProvider\");\n  }\n\n  return context;\n}\n\n_s2(useMoralisDapp, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport { MoralisDappProvider, useMoralisDapp };\n\nvar _c;\n\n$RefreshReg$(_c, \"MoralisDappProvider\");","map":{"version":3,"sources":["C:/Users/Kye Goullet/Documents/opensea Dapp/ethereum-nft-marketplace-boilerplate/src/providers/MoralisDappProvider/MoralisDappProvider.js"],"names":["React","useEffect","useState","useMoralis","MoralisDappContext","MoralisDappProvider","children","web3","Moralis","user","walletAddress","setWalletAddress","chainId","setChainId","contractABI","setContractABI","marketAddress","setMarketAddress","onChainChanged","chain","onAccountsChanged","address","givenProvider","selectedAddress","get","useMoralisDapp","context","useContext","undefined","Error"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useMoralis } from \"react-moralis\";\r\nimport MoralisDappContext from \"./context\";\r\n\r\nfunction MoralisDappProvider({ children }) {\r\n  const { web3, Moralis, user } = useMoralis();\r\n  const [walletAddress, setWalletAddress] = useState();\r\n  const [chainId, setChainId] = useState();       \r\n  const [contractABI, setContractABI] = useState[\r\n    {\r\n      \"inputs\": [\r\n        {\r\n          \"internalType\": \"address\",\r\n          \"name\": \"nftContract\",\r\n          \"type\": \"address\"\r\n        },\r\n        {\r\n          \"internalType\": \"uint256\",\r\n          \"name\": \"tokenId\",\r\n          \"type\": \"uint256\"\r\n        },\r\n        {\r\n          \"internalType\": \"uint256\",\r\n          \"name\": \"price\",\r\n          \"type\": \"uint256\"\r\n        }\r\n      ],\r\n      \"name\": \"createMarketItem\",\r\n      \"outputs\": [],\r\n      \"stateMutability\": \"payable\",\r\n      \"type\": \"function\"\r\n    },\r\n    {\r\n      \"inputs\": [\r\n        {\r\n          \"internalType\": \"address\",\r\n          \"name\": \"nftContract\",\r\n          \"type\": \"address\"\r\n        },\r\n        {\r\n          \"internalType\": \"uint256\",\r\n          \"name\": \"itemId\",\r\n          \"type\": \"uint256\"\r\n        }\r\n      ],\r\n      \"name\": \"createMarketSale\",\r\n      \"outputs\": [],\r\n      \"stateMutability\": \"payable\",\r\n      \"type\": \"function\"\r\n    },\r\n    {\r\n      \"inputs\": [],\r\n      \"stateMutability\": \"nonpayable\",\r\n      \"type\": \"constructor\"\r\n    },\r\n    {\r\n      \"anonymous\": false,\r\n      \"inputs\": [\r\n        {\r\n          \"indexed\": true,\r\n          \"internalType\": \"uint256\",\r\n          \"name\": \"itemId\",\r\n          \"type\": \"uint256\"\r\n        },\r\n        {\r\n          \"indexed\": true,\r\n          \"internalType\": \"address\",\r\n          \"name\": \"nftContract\",\r\n          \"type\": \"address\"\r\n        },\r\n        {\r\n          \"indexed\": true,\r\n          \"internalType\": \"uint256\",\r\n          \"name\": \"tokenId\",\r\n          \"type\": \"uint256\"\r\n        },\r\n        {\r\n          \"indexed\": false,\r\n          \"internalType\": \"address\",\r\n          \"name\": \"seller\",\r\n          \"type\": \"address\"\r\n        },\r\n        {\r\n          \"indexed\": false,\r\n          \"internalType\": \"address\",\r\n          \"name\": \"owner\",\r\n          \"type\": \"address\"\r\n        },\r\n        {\r\n          \"indexed\": false,\r\n          \"internalType\": \"uint256\",\r\n          \"name\": \"price\",\r\n          \"type\": \"uint256\"\r\n        },\r\n        {\r\n          \"indexed\": false,\r\n          \"internalType\": \"bool\",\r\n          \"name\": \"sold\",\r\n          \"type\": \"bool\"\r\n        }\r\n      ],\r\n      \"name\": \"MarketItemCreated\",\r\n      \"type\": \"event\"\r\n    },\r\n    {\r\n      \"anonymous\": false,\r\n      \"inputs\": [\r\n        {\r\n          \"indexed\": true,\r\n          \"internalType\": \"uint256\",\r\n          \"name\": \"itemId\",\r\n          \"type\": \"uint256\"\r\n        },\r\n        {\r\n          \"indexed\": false,\r\n          \"internalType\": \"address\",\r\n          \"name\": \"owner\",\r\n          \"type\": \"address\"\r\n        }\r\n      ],\r\n      \"name\": \"MarketItemSold\",\r\n      \"type\": \"event\"\r\n    },\r\n    {\r\n      \"inputs\": [],\r\n      \"name\": \"fetchMarketItems\",\r\n      \"outputs\": [\r\n        {\r\n          \"components\": [\r\n            {\r\n              \"internalType\": \"uint256\",\r\n              \"name\": \"itemId\",\r\n              \"type\": \"uint256\"\r\n            },\r\n            {\r\n              \"internalType\": \"address\",\r\n              \"name\": \"nftContract\",\r\n              \"type\": \"address\"\r\n            },\r\n            {\r\n              \"internalType\": \"uint256\",\r\n              \"name\": \"tokenId\",\r\n              \"type\": \"uint256\"\r\n            },\r\n            {\r\n              \"internalType\": \"address payable\",\r\n              \"name\": \"seller\",\r\n              \"type\": \"address\"\r\n            },\r\n            {\r\n              \"internalType\": \"address payable\",\r\n              \"name\": \"owner\",\r\n              \"type\": \"address\"\r\n            },\r\n            {\r\n              \"internalType\": \"uint256\",\r\n              \"name\": \"price\",\r\n              \"type\": \"uint256\"\r\n            },\r\n            {\r\n              \"internalType\": \"bool\",\r\n              \"name\": \"sold\",\r\n              \"type\": \"bool\"\r\n            }\r\n          ],\r\n          \"internalType\": \"struct marketPlaceBoilerPlate.MarketItem[]\",\r\n          \"name\": \"\",\r\n          \"type\": \"tuple[]\"\r\n        }\r\n      ],\r\n      \"stateMutability\": \"view\",\r\n      \"type\": \"function\"\r\n    },\r\n    {\r\n      \"inputs\": [],\r\n      \"name\": \"owner\",\r\n      \"outputs\": [\r\n        {\r\n          \"internalType\": \"address\",\r\n          \"name\": \"\",\r\n          \"type\": \"address\"\r\n        }\r\n      ],\r\n      \"stateMutability\": \"view\",\r\n      \"type\": \"function\"\r\n    }\r\n  ]\r\n  const [marketAddress, setMarketAddress] = useState(0xd9145CCE52D386f254917e481eB44e9943F39138); //Smart Contract Address Here\r\n\r\n\r\n  useEffect(() => {\r\n    Moralis.onChainChanged(function (chain) {\r\n      setChainId(chain);\r\n    });\r\n\r\n    Moralis.onAccountsChanged(function (address) {\r\n      setWalletAddress(address[0]);\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(() => setChainId(web3.givenProvider?.chainId));\r\n  useEffect(\r\n    () => setWalletAddress(web3.givenProvider?.selectedAddress || user?.get(\"ethAddress\")),\r\n    [web3, user]\r\n  );\r\n\r\n  return (\r\n    <MoralisDappContext.Provider value={{ walletAddress, chainId, marketAddress, setMarketAddress, contractABI, setContractABI }}>\r\n      {children}\r\n    </MoralisDappContext.Provider>\r\n  );\r\n}\r\n\r\nfunction useMoralisDapp() {\r\n  const context = React.useContext(MoralisDappContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useMoralisDapp must be used within a MoralisDappProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\nexport { MoralisDappProvider, useMoralisDapp };\r\n"]},"metadata":{},"sourceType":"module"}