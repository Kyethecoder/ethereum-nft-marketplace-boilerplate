{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kye Goullet\\\\Documents\\\\opensea Dapp\\\\ethereum-nft-marketplace-boilerplate\\\\src\\\\components\\\\SearchCollections.jsx\",\n    _s = $RefreshSig$();\n\nimport { Select } from 'antd';\nimport { useMoralisDapp } from \"providers/MoralisDappProvider/MoralisDappProvider\";\nimport { getCollectionsByChain } from \"helpers/collections\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SearchCollections(_ref) {\n  _s();\n\n  let {\n    setInputValue\n  } = _ref;\n  const {\n    Option\n  } = Select;\n  const {\n    chainId\n  } = useMoralisDapp();\n  const NFTCollections = getCollectionsByChain(chainId);\n\n  function onChange(value) {\n    setInputValue(value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      showSearch: true,\n      style: {\n        width: \"1000px\",\n        marginLeft: \"20px\"\n      },\n      placeholder: \"Find a Collection\",\n      optionFilterProp: \"children\",\n      onChange: onChange,\n      children: NFTCollections && NFTCollections.map((collection, i) => /*#__PURE__*/_jsxDEV(Option, {\n        value: collection.addrs,\n        children: collection.name\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(SearchCollections, \"Q3Iq7A33gnqexI4ouqZk42Vxu0g=\", false, function () {\n  return [useMoralisDapp];\n});\n\n_c = SearchCollections;\nexport default SearchCollections;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchCollections\");","map":{"version":3,"names":["Select","useMoralisDapp","getCollectionsByChain","SearchCollections","setInputValue","Option","chainId","NFTCollections","onChange","value","width","marginLeft","map","collection","i","addrs","name"],"sources":["C:/Users/Kye Goullet/Documents/opensea Dapp/ethereum-nft-marketplace-boilerplate/src/components/SearchCollections.jsx"],"sourcesContent":["import { Select } from 'antd';\r\nimport { useMoralisDapp } from \"providers/MoralisDappProvider/MoralisDappProvider\";\r\nimport { getCollectionsByChain } from \"helpers/collections\";\r\n\r\n\r\nfunction SearchCollections({setInputValue}){\r\n    const { Option } = Select;\r\n    const { chainId } = useMoralisDapp();\r\n    const NFTCollections = getCollectionsByChain(chainId);\r\n    \r\n    \r\n\r\n    function onChange(value) {\r\n        setInputValue(value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Select\r\n            showSearch\r\n            style={{width: \"1000px\",\r\n                    marginLeft: \"20px\" }}\r\n            placeholder=\"Find a Collection\"\r\n            optionFilterProp=\"children\"\r\n            onChange={onChange}\r\n        >   \r\n        {NFTCollections && \r\n            NFTCollections.map((collection, i) => \r\n            <Option value={collection.addrs} key= {i}>{collection.name}</Option>\r\n            )\r\n            }   \r\n        </Select>\r\n            \r\n        </>\r\n    )\r\n}\r\nexport default SearchCollections;"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,MAAvB;AACA,SAASC,cAAT,QAA+B,mDAA/B;AACA,SAASC,qBAAT,QAAsC,qBAAtC;;;;AAGA,SAASC,iBAAT,OAA2C;EAAA;;EAAA,IAAhB;IAACC;EAAD,CAAgB;EACvC,MAAM;IAAEC;EAAF,IAAaL,MAAnB;EACA,MAAM;IAAEM;EAAF,IAAcL,cAAc,EAAlC;EACA,MAAMM,cAAc,GAAGL,qBAAqB,CAACI,OAAD,CAA5C;;EAIA,SAASE,QAAT,CAAkBC,KAAlB,EAAyB;IACrBL,aAAa,CAACK,KAAD,CAAb;EACH;;EAED,oBACI;IAAA,uBACA,QAAC,MAAD;MACI,UAAU,MADd;MAEI,KAAK,EAAE;QAACC,KAAK,EAAE,QAAR;QACCC,UAAU,EAAE;MADb,CAFX;MAII,WAAW,EAAC,mBAJhB;MAKI,gBAAgB,EAAC,UALrB;MAMI,QAAQ,EAAEH,QANd;MAAA,UAQCD,cAAc,IACXA,cAAc,CAACK,GAAf,CAAmB,CAACC,UAAD,EAAaC,CAAb,kBACnB,QAAC,MAAD;QAAQ,KAAK,EAAED,UAAU,CAACE,KAA1B;QAAA,UAA2CF,UAAU,CAACG;MAAtD,GAAuCF,CAAvC;QAAA;QAAA;QAAA;MAAA,QADA;IATJ;MAAA;MAAA;MAAA;IAAA;EADA,iBADJ;AAmBH;;GA9BQX,iB;UAEeF,c;;;KAFfE,iB;AA+BT,eAAeA,iBAAf"},"metadata":{},"sourceType":"module"}